<?xml version="1.0" encoding="utf-8"?>
<resources>


    <!-- 以下为 binding 的参数. -->
    <!-- require boolean value to decide whether requestFocus for view. -->
    <attr name="requestFocus" format="boolean" />
    <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
    <attr name="itemView" format="reference" />
    <!-- require List<ViewModel> bind to ItemView to presentation.-->
    <attr name="items" format="reference" />
    <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
    <attr name="adapter" format="reference" />

    <attr name="onScrollChangeCommand" format="reference" />
    <attr name="onScrollStateChangedCommand" format="reference" />
    <attr name="url" format="string" />
    <attr name="onTouchCommand" format="reference" />

    <!-- require BindingCommand {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view click event. -->
    <attr name="onClickCommand" format="reference" />
    <attr name="onLongClickCommand" format="reference" />
    <!-- require BindingCommand<Boolean> {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view focus change event.
     BindingCommand would has params which means if view hasFocus.-->
    <attr name="onFocusChangeCommand" format="reference" />
    <!--<attr name="isThrottleFirst" format="boolean" />-->
    <attr name="onViewCommand" format="reference" />
    <!-- require boolean value to decide whether requestFocus for view. -->
    <declare-styleable name="View">
        <!-- require BindingCommand {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view click event. -->
        <attr name="onClickCommand" />
        <attr name="onLongClickCommand" />
        <!-- require BindingCommand<Boolean> {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view focus change event.
         BindingCommand would has params which means if view hasFocus.-->
        <attr name="onFocusChangeCommand" />
        <!-- require BindingCommand<MotionEvent> -->
        <attr name="onTouchCommand" />
        <!--<attr name="isThrottleFirst" format="boolean" />-->
        <attr name="onViewCommand" />
        <attr name="isVisible" format="reference" />
        <attr name="isSelected" format="boolean" />
        <attr name="isClickable" format="boolean" />
        <attr name="isPressed" format="boolean" />
    </declare-styleable>


    <declare-styleable name="AdapterView">
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="items" />
        <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
        <attr name="adapter" />
        <attr name="dropDownItemView" format="reference" />
        <attr name="itemIds" format="reference" />
        <attr name="itemIsEnabled" format="reference" />
        <!-- require BindingCommand<Integer> -->
        <attr name="onScrollStateChangedCommand" />
        <!-- require BindingCommand<ListViewScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
        <!-- require BindingCommand<Integer> count of list items-->
        <attr name="onLoadMoreCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="TextView">
        <!--require BindingCommand<TextChangeDataWrapper> -->
        <attr name="beforeTextChangedCommand" format="reference" />
        <!--require BindingCommand<TextChangeDataWrapper> -->
        <attr name="onTextChangedCommand" format="reference" />
        <!--require BindingCommand<String> -->
        <attr name="afterTextChangedCommand" format="reference" />
        <attr name="textChanged" format="reference" />
        <!--set editText cursor position-->
        <attr name="cursorIndex" format="integer" />
    </declare-styleable>

    <declare-styleable name="ImageView">
        <!--  load bitmap from uri(string type) -->
        <attr name="uri" format="string" />
        <attr name="imgBitmap" format="reference" />
        <attr name="imgResource" format="integer" />
        <attr name="imgBgResource" format="integer" />
        <!--width for ResizeOptions (use Fresco to load bitmap). -->
        <attr name="request_width" format="integer" />
        <!--height for ResizeOptions (use Fresco to load bitmap). -->
        <attr name="request_height" format="integer" />
        <attr name="placeholderRes" format="reference|color" />
        <!--  require BindingCommand<Bitmap> See {@link @link com.kelin.mvvmlight.command.BindingCommand} -->
        <attr name="onSuccessCommand" format="reference" />
        <!--require BindingCommand<CloseableReference<CloseableImage>> See {@link com.kelin.mvvmlight.command.BindingCommand} -->
        <attr name="onFailureCommand" format="reference" />

    </declare-styleable>

    <declare-styleable name="ViewGroup">
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="observableList" format="reference" />

    </declare-styleable>

    <declare-styleable name="RecyclerView" parent="AdapterView">
        <attr name="lineManager" format="reference" />
    </declare-styleable>
    <declare-styleable name="RadioGroup">
        <attr name="onCheckedChangedCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="Spinner">
        <attr name="itemDatas" format="reference" />
        <attr name="valueReply" format="string" />
        <attr name="onItemSelectedCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="Switch">
        <attr name="onCheckedChangeCommand" format="reference" />
        <attr name="switchState" format="boolean" />
    </declare-styleable>

    <declare-styleable name="ListView" parent="AdapterView">
        <attr name="itemBinding" format="reference" />
        <!--require BindingCommand<Integer> integer mean to position where is clicked! -->
        <attr name="onItemClickCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="ViewPager">
        <attr name="orientation">
            <enum name="horizontal" value="0" />
            <enum name="vertical" value="1" />
        </attr>
        <!-- 上面方向的参数是原先的，非 binding 部分的参数. -->
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="items" />
        <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
        <attr name="adapter" />
        <!-- require PageTitles<T>-->
        <attr name="pageTitles" format="reference" />
        <!--require BindingCommand<ViewPagerDataWrapper> -->
        <attr name="onPageScrolledCommand" format="reference" />
        <!--require BindingCommand<Integer> -->
        <attr name="onPageSelectedCommand" format="reference" />
        <!--require BindingCommand<Integer> -->
        <attr name="onPageScrollStateChangedCommand" format="reference" />

    </declare-styleable>

    <declare-styleable name="NestedScrollView">
        <!-- require BindingCommand<NestScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
    </declare-styleable>

    <declare-styleable name="SimpleDraweeView">
        <!-- require String to load Image"-->
        <attr name="url" />
    </declare-styleable>

    <declare-styleable name="ScrollView">
        <!-- require BindingCommand<ScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
    </declare-styleable>

    <declare-styleable name="SwipeRefreshLayout">
        <!-- require RelayCommand -->
        <attr name="onFlushCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="WebView">
        <!-- require String render to html show in webview-->
        <attr name="render" format="string" />
    </declare-styleable>




    <!-- 轮播控件的自定义属性. -->
    <declare-styleable name="BGABanner">
        <!-- 指示点容器背景 -->
        <attr name="banner_pointContainerBackground" format="reference|color" />
        <!-- 指示点背景 -->
        <attr name="banner_pointDrawable" format="reference" />
        <!-- 指示点容器左右内间距 -->
        <attr name="banner_pointContainerLeftRightPadding" format="dimension" />
        <!-- 指示点上下外间距 -->
        <attr name="banner_pointTopBottomMargin" format="dimension" />
        <!-- 指示点左右外间距 -->
        <attr name="banner_pointLeftRightMargin" format="dimension" />
        <!-- 指示器的位置 -->
        <attr name="banner_indicatorGravity">
            <flag name="top" value="0x30" />
            <flag name="bottom" value="0x50" />
            <flag name="left" value="0x03" />
            <flag name="right" value="0x05" />
            <flag name="center_horizontal" value="0x01" />
        </attr>
        <!-- 是否开启自动轮播 -->
        <attr name="banner_pointAutoPlayAble" format="boolean" />
        <!-- 自动轮播的时间间隔 -->
        <attr name="banner_pointAutoPlayInterval" format="integer" />
        <!-- 页码切换过程的时间长度 -->
        <attr name="banner_pageChangeDuration" format="integer" />
        <!-- 页面切换的动画效果 -->
        <attr name="banner_transitionEffect" format="enum">
            <enum name="defaultEffect" value="0" />
            <enum name="alpha" value="1" />
            <enum name="rotate" value="2" />
            <enum name="cube" value="3" />
            <enum name="flip" value="4" />
            <enum name="accordion" value="5" />
            <enum name="zoomFade" value="6" />
            <enum name="fade" value="7" />
            <enum name="zoomCenter" value="8" />
            <enum name="zoomStack" value="9" />
            <enum name="stack" value="10" />
            <enum name="depth" value="11" />
            <enum name="zoom" value="12" />
        </attr>
        <!-- 提示文案的文字颜色 -->
        <attr name="banner_tipTextColor" format="reference|color" />
        <!-- 提示文案的文字大小 -->
        <attr name="banner_tipTextSize" format="dimension" />
        <!-- 加载网络数据时覆盖在 BGABanner 最上层的占位图 -->
        <attr name="banner_placeholderDrawable" format="reference" />
        <!-- 是否是数字指示器 -->
        <attr name="banner_isNumberIndicator" format="boolean" />
        <!-- 数字指示器文字颜色 -->
        <attr name="banner_numberIndicatorTextColor" format="reference|color" />
        <!-- 数字指示器文字大小 -->
        <attr name="banner_numberIndicatorTextSize" format="dimension" />
        <!-- 数字指示器背景 -->
        <attr name="banner_numberIndicatorBackground" format="reference" />
        <!-- 当只有一页数据时是否显示指示器，默认值为 false -->
        <attr name="banner_isNeedShowIndicatorOnOnlyOnePage" format="boolean" />
        <!-- 自动轮播区域距离 BGABanner 底部的距离 -->
        <attr name="banner_contentBottomMargin" format="dimension" />
        <!-- 宽高比例，如果大于 0，则会根据宽度来计算高度，否则使用 android:layout_height 指定的高度 -->
        <attr name="banner_aspectRatio" format="float" />
        <!-- 占位图和资源图片缩放模式 -->
        <attr name="android:scaleType" />
    </declare-styleable>


    <!-- 以下是刷新控件的属性. -->
    <attr name="srlDrawableSize" format="dimension" /><!--图片尺寸-->
    <attr name="srlDrawableArrowSize" format="dimension" /><!--箭头图片尺寸-->
    <attr name="srlDrawableProgressSize" format="dimension" /><!--箭头图片尺寸-->
    <attr name="srlDrawableMarginRight" format="dimension" /><!--图片和文字的间距-->
    <attr name="srlTextSizeTitle" format="dimension" /><!--标题字体-->
    <attr name="srlTextSizeTime" format="dimension" /><!--时间字体-->
    <attr name="srlFinishDuration" format="integer" /><!--完成时停留时间-->
    <attr name="srlPrimaryColor" format="color" /><!--主要颜色-->
    <attr name="srlAccentColor" format="color" /><!--强调颜色-->
    <attr name="srlDrawableArrow" format="reference" /><!--箭头图片-->
    <attr name="srlDrawableProgress" format="reference" /><!--转动图片-->
    <attr name="srlEnableHorizontalDrag" format="boolean" /><!--支持水平拖动-->

    <attr name="srlClassicsSpinnerStyle" format="enum">
        <enum name="Translate" value="0" /><!--平行移动-->
        <enum name="Scale" value="1" /><!--拉伸形变-->
        <enum name="FixedBehind" value="2" /><!--固定在背后-->
    </attr>

    <attr name="layout_srlSpinnerStyle" format="enum">
        <enum name="Translate" value="0" /><!--平行移动-->
        <enum name="Scale" value="1" /><!--拉伸形变-->
        <enum name="FixedBehind" value="2" /><!--固定在背后-->
        <enum name="FixedFront" value="3" /><!--固定在前面-->
        <enum name="MatchLayout" value="4" /><!--填满布局-->
    </attr>

    <declare-styleable name="PenoderRefreshLayout">
        <attr name="srlPrimaryColor" />
        <attr name="srlAccentColor" />
        <attr name="srlReboundDuration" format="integer" />
        <attr name="srlHeaderHeight" format="dimension" />
        <attr name="srlFooterHeight" format="dimension" />
        <attr name="srlDragRate" format="float" />
        <attr name="srlHeaderMaxDragRate" format="float" />
        <attr name="srlFooterMaxDragRate" format="float" />
        <attr name="srlEnableRefresh" format="boolean" />
        <attr name="srlEnableLoadmore" format="boolean" />
        <attr name="srlEnableHeaderTranslationContent" format="boolean" />
        <attr name="srlEnableFooterTranslationContent" format="boolean" />
        <attr name="srlEnablePreviewInEditMode" format="boolean" />
        <attr name="srlEnableAutoLoadmore" format="boolean" />
        <attr name="srlEnableOverScrollBounce" format="boolean" />
        <attr name="srlEnablePureScrollMode" format="boolean" />
        <attr name="srlEnableNestedScrolling" format="boolean" />
        <attr name="srlEnableScrollContentWhenLoaded" format="boolean" />
        <attr name="srlEnableLoadmoreWhenContentNotFull" format="boolean" />
        <attr name="srlDisableContentWhenRefresh" format="boolean" />
        <attr name="srlDisableContentWhenLoading" format="boolean" />
        <attr name="srlFixedHeaderViewId" format="reference" />
        <attr name="srlFixedFooterViewId" format="reference" />

        <!-- MVVM ViewBinding 中定义的属性. -->
        <attr name="onRefreshCommand" format="reference" />
        <attr name="onLoadingCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="SmartRefreshLayout_Layout">
        <attr name="layout_srlSpinnerStyle" />
        <attr name="layout_srlBackgroundColor" format="color" />
    </declare-styleable>

    <declare-styleable name="BezierRadarHeader">
        <attr name="srlPrimaryColor" />
        <attr name="srlAccentColor" />
        <attr name="srlEnableHorizontalDrag" />
    </declare-styleable>

    <declare-styleable name="BallPulseFooter">
        <attr name="srlClassicsSpinnerStyle" />
        <attr name="srlPrimaryColor" />
        <attr name="srlAccentColor" />
    </declare-styleable>

    <declare-styleable name="ClassicsHeader">
        <attr name="srlClassicsSpinnerStyle" />
        <attr name="srlPrimaryColor" />
        <attr name="srlAccentColor" />
        <attr name="srlFinishDuration" />
        <attr name="srlDrawableArrow" />
        <attr name="srlDrawableProgress" />
        <attr name="srlDrawableMarginRight" />
        <attr name="srlDrawableSize" />
        <attr name="srlDrawableArrowSize" />
        <attr name="srlDrawableProgressSize" />
        <attr name="srlTextSizeTitle" />
        <attr name="srlTextSizeTime" />
        <attr name="srlTextTimeMarginTop" format="dimension" />
        <attr name="srlEnableLastTime" format="boolean" />
    </declare-styleable>

    <declare-styleable name="ClassicsFooter">
        <attr name="srlClassicsSpinnerStyle" />
        <attr name="srlPrimaryColor" />
        <attr name="srlAccentColor" />
        <attr name="srlFinishDuration" />
        <attr name="srlTextSizeTitle" />
        <attr name="srlDrawableArrow" />
        <attr name="srlDrawableProgress" />
        <attr name="srlDrawableMarginRight" />
        <attr name="srlDrawableSize" />
        <attr name="srlDrawableArrowSize" />
        <attr name="srlDrawableProgressSize" />
    </declare-styleable>


    <!-- View 文件夹下的自定义 View-->
    <!--  自定义标题栏. -->
    <declare-styleable name="CustomTitle">
        <attr name="leftIcon" format="reference" />
        <attr name="leftIconEnable" format="boolean" />
        <attr name="leftTitle" format="string" />
        <attr name="titleTxt" format="string" />
        <attr name="rightTitle" format="string" />
        <attr name="rightIcon" format="reference" />
        <attr name="textColor" format="color" />
        <attr name="leftTitleSize" format="dimension" />
        <attr name="titleSize" format="dimension" />
        <attr name="rightTitleSize" format="dimension" />

        <!-- MVVM ViewBindingAdapter 定义属性-->
        <attr name="leftIconClickCommand" format="reference" />
        <attr name="titleClickCommand" format="reference" />
        <attr name="titleDoubleClickCommand" format="reference" />
        <attr name="rightIconClickCommand" format="reference" />
        <attr name="rightTitleClickCommand" format="reference" />
    </declare-styleable>

    <!-- 圆形ImageView. -->
    <declare-styleable name="CircleImageView">
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_border_overlay" format="boolean" />
        <attr name="civ_fill_color" format="color" />
    </declare-styleable>

</resources>